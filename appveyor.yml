version: 5.5.{build}
image:
- Visual Studio 2017

environment:
  AppVeyorApi:
    secure: p+Ozf2MlIbzTx8eVwXiZEFPnCYM8dITJTn2albXeWlQ=
branches:
  except:
    - /.*Release.*/
skip_tags: true

init:
  - ps: |
        Write-Host "Init task - set version number if necessary"
        $currVersion = [version]$env:APPVEYOR_BUILD_VERSION
        $compareVersion = [version]::new($currVersion.Major, $currVersion.Minor, 0,0)
        if ($env:APPVEYOR_REPO_BRANCH -eq "master" -and $currVersion -gt $compareVersion)
        {          
          $properVersion = $compareVersion.ToString(3)
          Add-AppVeyorMessage -Category Warning "Resetting version from $env:APPVEYOR_BUILD_VERSION to $properVersion"
          $deleteBuild = $env:APPVEYOR_BUILD_VERSION
          [environment]::setenvironmentvariable('APPVEYOR_BUILD_VERSION',$properVersion )
          Update-AppveyorBuild -Version $properVersion

          Add-AppVeyorMessage "Calling API to reset build to 1 for next commit"
          $appveyorUrl = "https://ci.appveyor.com/api/projects/nyanhp/automatedlab/settings/build-number"
          $appveyorUrlDelete = "https://ci.appveyor.com/api/projects/nyanhp/automatedlab/settings/build-number"

          $headers = @{
              "Authorization" = "Bearer $env:AppVeyorApi"
              "Content-type" = "application/json"
          }
          
          $body = @{ nextBuildNumber=1 }
          $body = $body | ConvertTo-Json
          Invoke-RestMethod -Uri $appveyorUrl -Headers $headers -Body $body -Method Put
        }

install:
  - git submodule -q update --init --recursive

assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "{version}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

before_build:
  - nuget restore
  - ps: |
        Write-Host "'before_build' block"
        $currVersion = [version]$env:APPVEYOR_BUILD_VERSION
        $compareVersion = [version]::new($currVersion.Major, $currVersion.Minor, 0,0)
        if ($env:APPVEYOR_REPO_BRANCH -eq "master" -and $currVersion -gt $compareVersion)
        {
          $properVersion = $env:APPVEYOR_BUILD_VERSION -replace '\d+$',0
          [environment]::setenvironmentvariable('APPVEYOR_BUILD_VERSION',$properVersion )
          Update-AppveyorBuild -Version $properVersion

          Add-AppVeyorMessage "Calling API to reset build to 1 for next commit"
          $appveyorUrl = "https://ci.appveyor.com/api/projects/nyanhp/automatedlab/settings/build-number"

          $headers = @{
              "Authorization" = "Bearer $env:AppVeyorApi"
              "Content-type" = "application/json"
          }
          
          $body = @{ nextBuildNumber=1 }
          $body = $body | ConvertTo-Json
          Invoke-RestMethod -Uri $appveyorUrl -Headers $headers -Body $body -Method Put
        }
        Write-Host "Setting version number in files"
        Add-AppveyorMessage -Message "Setting version number in files" -Category Information
        gci -Filter *.psd1 -Recurse | foreach {(Get-Content $_.FullName -Raw) -replace "ModuleVersion += '\d\.\d\.\d\.\d'", "ModuleVersion = '$env:APPVEYOR_BUILD_VERSION'" | Out-File $_.FullName}

build:
  project: AutomatedLab.sln

after_build:
  - ps: |
        Write-Host "Calling build script"
        .\Build.ps1
        Write-Host "'after_build' block"
        $Params = @{
        Path    = $env:APPVEYOR_BUILD_FOLDER
        Force   = $true
        Recurse = $false
        Verbose = $true
        }
        Invoke-PSDeploy @Params # Create nuget package artifacts
        Write-Host "Locating installer to push as artifact"
        Add-AppveyorMessage "Locating installer to push as artifact" -Category Information
        $msifile = Get-ChildItem -Recurse -Filter AutomatedLab.msi | Select-Object -First 1
        Push-AppVeyorArtifact $msifile.FullName -FileName $msifile.Name -DeploymentName alinstaller

after_deploy:
  ps: |
        Write-Host -Fore Yellow 'Releasing stuff'        

on_finish:
  - ps: |
        Write-Host "'on_finish' block"
        #$blockRdp = $true
        #iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
